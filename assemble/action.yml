name: Assemble product specification
description: Assemble the final product specification Markdown document from prepared artefacts.
inputs:
  psdata-path:
    description: Path to the psdata JSON file generated during preparation.
    required: true
  output-path:
    description: Output path for the rendered product specification Markdown file.
    required: true
  template-path:
    description: Optional override for the Handlebars-style template.
    required: false
  feature-catalogue-markdown:
    description: Optional path to the feature catalogue Markdown table.
    required: false
  feature-catalogue-uml:
    description: Optional path to the feature catalogue PlantUML source.
    required: false
  feature-catalogue-png:
    description: Path to the rendered PlantUML PNG diagram that will be embedded.
    required: true
  updated:
    description: Optional override for the updated field in the rendered specification.
    required: false
outputs:
  spec-markdown:
    description: Path to the assembled product specification Markdown file.
    value: ${{ steps.assemble.outputs.spec-markdown }}
runs:
  using: composite
  steps:
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"
    - name: Assemble product specification
      id: assemble
      shell: bash
      run: |
        set -eo pipefail
        ARGS=(
          "${{ inputs.psdata-path }}"
          "--output"
          "${{ inputs.output-path }}"
        )
        if [ -n "${{ inputs.template-path }}" ]; then
          ARGS+=("--template" "${{ inputs.template-path }}")
        fi
        if [ -n "${{ inputs.feature-catalogue-markdown }}" ]; then
          ARGS+=("--feature-catalogue-markdown" "${{ inputs.feature-catalogue-markdown }}")
        fi
        if [ -n "${{ inputs.feature-catalogue-uml }}" ]; then
          ARGS+=("--feature-catalogue-uml" "${{ inputs.feature-catalogue-uml }}")
        fi
        ARGS+=("--feature-catalogue-png" "${{ inputs.feature-catalogue-png }}")
        if [ -n "${{ inputs.updated }}" ]; then
          ARGS+=("--updated" "${{ inputs.updated }}")
        fi
        python "${{ github.action_path }}/../scripts/assemble_product_spec.py" "${ARGS[@]}"
        {
          echo "spec-markdown=${{ inputs.output-path }}"
        } >> "$GITHUB_OUTPUT"
